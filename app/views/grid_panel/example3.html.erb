<% title "Netzke::GridPanel (3)" %>
       
<ul>
<li><%= link_to "<< Example 2", "/grid_panel/example2"%></li> 
<li><%= link_to "Example 4 >>", "/grid_panel/example4"%></li>
<ul>    

<h2>Example 3: Model-wide configuration, associations, Rails validations and "virtual" columns</h2>
<p>Here's an example that demonstrates:
  <li>how GridPanel handles one-to-many associations</li>
  <li>usage of "virtual" attributes (model's instance methods)</li>
  <li>how to specify per model which columns should be picked up by grid, and how to preconfigure them</li>
  <li>Rails' validations in action</li>

<% coderay do %>
# Model
class Clerk < ActiveRecord::Base
  belongs_to :boss

  validates_presence_of :first_name
  validates_presence_of :last_name

  # a virtual attribute
  def name
    "#{last_name}, #{first_name}"
  end

  # another virtual attribute
  def updated
    updated_at > 5.minutes.ago
  end
end

# Declare and configure attributes specifically for GridPanel
module Netzke::ModelExtensions
  class ClerkForGridPanel < Clerk
    # Virtual attribute defined in the model
    netzke_attribute :name, :renderer => "uppercase", :width => 200
    
    # Virtual attribute defined below (thus only to be shown in GridPanels)
    netzke_attribute :updated_bulb, :width => 40, :label => "<div class='bulb-off' />", :tooltip => "Recently updated"
    
    # Preconfigure a "real" attribute
    netzke_attribute :salary, :renderer => "usMoney"
    
    # Specify which columns and in which order to show
    netzke_expose_attributes :id, :name, :first_name, :last_name, :updated_bulb, :email, :salary, :boss__last_name      
    
    def updated_bulb
      bulb = updated ? "on" : "off"
      "<div class='bulb-#{bulb}' />"
    end
  end
end

# In the view:
netzke :clerks, 
  :class_name => "GridPanel", 
  :model => 'Clerk'
<% end %>
<p>Result:</p>
<%= netzke :clerks, 
  :class_name => "GridPanel",
  :model => 'Clerk' %>         
  
